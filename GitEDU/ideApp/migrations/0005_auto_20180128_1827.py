# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2018-01-28 18:27
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion

from ideApp.models import ProgramingLanguage, RepositoryTemplate

programing_languages = ['Shell', 'Python 3', 'PostgreSQL']


def create_programing_languages(apps, schema_editor):
    for programing_language in programing_languages:
        programing_language_db_goc = ProgramingLanguage.objects.get_or_create(name=programing_language)
        print("%s created: %s" % (programing_language, programing_language_db_goc[1]))
        programing_language_db_obj = programing_language_db_goc[0]
        programing_language_db_obj.save()


repository_templates = {
    'Shell': {
        'name': 'shell-code-executor-template',
        'url': 'http://10.10.10.1/shell-code-executor-template.git'
    },
    'Python 3': {
        'name': 'python3-code-executor-template',
        'url': 'http://10.10.10.1/python3-code-executor-template.git'
    },
    'PostgreSQL': {
        'name': 'postgresql-code-executor-template',
        'url': 'http://10.10.10.1/postgresql-code-executor-template.git'
    }
}


def create_templates(apps, schema_editor):
    for repository_template in repository_templates:
        programing_language_db_goc = ProgramingLanguage.objects.get_or_create(name=repository_template)
        print("%s created: %s" % (repository_template, programing_language_db_goc[1]))
        programing_language_db_obj = programing_language_db_goc[0]
        programing_language_db_obj.save()
        repository_template_db_goc = RepositoryTemplate.objects.get_or_create(
            name=repository_templates.get(repository_template).get('name'),
            programing_language=programing_language_db_obj,
            repository_url=repository_templates.get(repository_template).get('url')
        )
        print(
            "%s (%s) <%s> created: %s" % (
                repository_templates.get(repository_template).get('name'),
                repository_templates.get(repository_template).get('url'),
                repository_template, repository_template_db_goc[1]
            )
        )
        repository_template_db_obj = repository_template_db_goc[0]
        repository_template_db_obj.save()


class Migration(migrations.Migration):

    dependencies = [
        ('ideApp', '0004_auto_20180128_1823'),
    ]

    operations = [
        migrations.AlterField(
            model_name='programinglanguage',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='repositorytemplate',
            name='related_repository',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='ideApp.Repository'),
        ),
        migrations.AddField(
            model_name='repositorytemplate',
            name='repository_url',
            field=models.CharField(default='http://10.10.10.1/', max_length=255, unique=True),
            preserve_default=False,
        ),
        migrations.RunPython(create_programing_languages),
        migrations.RunPython(create_templates)
    ]
